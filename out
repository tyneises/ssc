make -f Makefile-shared -j4
make[1]: Entering directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make[1]: 'shared.a' is up to date.
make[1]: Leaving directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make -f Makefile-nlopt -j4
make[1]: Entering directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make[1]: 'nlopt.a' is up to date.
make[1]: Leaving directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make -f Makefile-lpsolve -j4
make[1]: Entering directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make[1]: 'lpsolve.a' is up to date.
make[1]: Leaving directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
make -f Makefile-solarpilot -j4
make[1]: Entering directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
g++ -std=c++0x -fPIC -Wall -g -O3 -I../ -D__64BIT__ -I../nlopt    -c -o Land.o ../solarpilot/Land.cpp
g++ -std=c++0x -fPIC -Wall -g -O3 -I../ -D__64BIT__ -I../nlopt    -c -o SolarField.o ../solarpilot/SolarField.cpp
g++ -std=c++0x -fPIC -Wall -g -O3 -I../ -D__64BIT__ -I../nlopt    -c -o Toolbox.o ../solarpilot/Toolbox.cpp
g++ -std=c++0x -fPIC -Wall -g -O3 -I../ -D__64BIT__ -I../nlopt    -c -o definitions.o ../solarpilot/definitions.cpp
../solarpilot/Land.cpp: In static member function ‘static void Land::getExtents(var_map&, double*)’:
../solarpilot/Land.cpp:155:18: warning: converting to non-pointer type ‘double’ from NULL [-Wconversion-null]
  double radmin = NULL, radmax=NULL;
                  ^
../solarpilot/Land.cpp:155:31: warning: converting to non-pointer type ‘double’ from NULL [-Wconversion-null]
  double radmin = NULL, radmax=NULL;
                               ^
../solarpilot/Land.cpp:170:42: warning: NULL used in arithmetic [-Wpointer-arith]
   if(min_fixed_rad > radmin || radmin == NULL) radmin = min_fixed_rad; //Only change if the fix min radius is larger than the previous bound
                                          ^
../solarpilot/Land.cpp:171:42: warning: NULL used in arithmetic [-Wpointer-arith]
   if(max_fixed_rad < radmax || radmax == NULL) radmax = max_fixed_rad; //Only change if the fix max radius is smaller than the previous bound
                                          ^
../solarpilot/Land.cpp:187:38: warning: NULL used in arithmetic [-Wpointer-arith]
       if(trmax < radmax || radmax == NULL) radmax = trmax;
                                      ^
../solarpilot/Land.cpp:193:181: error: no matching function for call to ‘std::exception::exception(const char [147])’
                 throw exception("Insufficient information provided to specify land bounds. At least 1 'inclusion' region must be provided if not specifying fixed or scaled bounds.");
                                                                                                                                                                                     ^
In file included from /usr/include/c++/5/new:40:0,
                 from /usr/include/c++/5/ext/new_allocator.h:33,
                 from /usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h:33,
                 from /usr/include/c++/5/bits/allocator.h:46,
                 from /usr/include/c++/5/vector:61,
                 from ../solarpilot/Land.h:53,
                 from ../solarpilot/Land.cpp:50:
/usr/include/c++/5/exception:63:5: note: candidate: std::exception::exception()
     exception() _GLIBCXX_USE_NOEXCEPT { }
     ^
/usr/include/c++/5/exception:63:5: note:   candidate expects 0 arguments, 1 provided
/usr/include/c++/5/exception:60:9: note: candidate: constexpr std::exception::exception(const std::exception&)
   class exception
         ^
/usr/include/c++/5/exception:60:9: note:   no known conversion for argument 1 from ‘const char [147]’ to ‘const std::exception&’
../solarpilot/Land.cpp:250:34: warning: NULL used in arithmetic [-Wpointer-arith]
   if(trmin > radmin || radmin == NULL) radmin = trmin;
                                  ^
../solarpilot/Land.cpp: In static member function ‘static void Land::getRadialExtents(var_map&, double*, double)’:
../solarpilot/Land.cpp:364:18: warning: converting to non-pointer type ‘double’ from NULL [-Wconversion-null]
  double radmin = NULL, radmax=NULL;
                  ^
../solarpilot/Land.cpp:364:31: warning: converting to non-pointer type ‘double’ from NULL [-Wconversion-null]
  double radmin = NULL, radmax=NULL;
                               ^
../solarpilot/Land.cpp:371:53: warning: NULL used in arithmetic [-Wpointer-arith]
   if(V.land.min_fixed_rad.val > radmin || radmin == NULL){radmin = V.land.min_fixed_rad.val;} //Only change if the fix min radius is larger than the previous bound
                                                     ^
../solarpilot/Land.cpp:372:53: warning: NULL used in arithmetic [-Wpointer-arith]
   if(V.land.max_fixed_rad.val < radmax || radmax == NULL){radmax = V.land.max_fixed_rad.val;} //Only change if the fix max radius is smaller than the previous bound
                                                     ^
../solarpilot/Land.cpp:378:15: warning: NULL used in arithmetic [-Wpointer-arith]
  if(radmin == NULL) rval[0] = -1.;
               ^
../solarpilot/Land.cpp:379:15: warning: NULL used in arithmetic [-Wpointer-arith]
  if(radmax == NULL) rval[1] = -1.;
               ^
<builtin>: recipe for target 'Land.o' failed
make[1]: *** [Land.o] Error 1
make[1]: *** Waiting for unfinished jobs....
../solarpilot/definitions.cpp: In member function ‘void var_map::drop_receiver(int)’:
../solarpilot/definitions.cpp:946:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for( int i=0; i<recs.size(); i++)
                    ^
../solarpilot/definitions.cpp:977:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i=0; i<recs.size(); i++)
                   ^
../solarpilot/definitions.cpp: In member function ‘void var_map::drop_heliostat(int)’:
../solarpilot/definitions.cpp:987:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for( int i=0; i<hels.size(); i++)
                    ^
../solarpilot/definitions.cpp:1018:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i=0; i<hels.size(); i++)
                   ^
In file included from ../solarpilot/SolarField.cpp:54:0:
../solarpilot/SolarField.h: In copy constructor ‘SolarField::SolarField(const SolarField&)’:
../solarpilot/SolarField.h:188:19: warning: ‘SolarField::_sim_error’ will be initialized after [-Wreorder]
  simulation_error _sim_error;
                   ^
../solarpilot/SolarField.h:153:3: warning:   ‘double SolarField::_estimated_annual_power’ [-Wreorder]
   _estimated_annual_power, //Calculated in ProcessLayoutResults().. Estimate of total annual heliostat power output
   ^
../solarpilot/SolarField.cpp:154:1: warning:   when initialized here [-Wreorder]
 SolarField::SolarField( const SolarField &sf )
 ^
In file included from ../solarpilot/SolarField.cpp:54:0:
../solarpilot/SolarField.h:192:14: warning: ‘SolarField::_var_map’ will be initialized after [-Wreorder]
     var_map *_var_map;
              ^
../solarpilot/SolarField.h:179:7: warning:   ‘Land SolarField::_land’ [-Wreorder]
  Land _land;
       ^
../solarpilot/SolarField.cpp:154:1: warning:   when initialized here [-Wreorder]
 SolarField::SolarField( const SolarField &sf )
 ^
../solarpilot/Toolbox.cpp: In function ‘void Toolbox::ellipse_bounding_box(double&, double&, double&, double*, double, double)’:
../solarpilot/Toolbox.cpp:1145:9: warning: unused variable ‘pi’ [-Wunused-variable]
  double pi = PI;
         ^
../solarpilot/Toolbox.cpp: In function ‘void Toolbox::poly_from_svg(std::__cxx11::string&, std::vector<sp_point>&, bool)’:
../solarpilot/Toolbox.cpp:1445:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                     for(size_t j=1; j<npt; j++)
                                      ^
../solarpilot/Toolbox.cpp:1463:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                     for(size_t j=1; j<npt; j++)
                                      ^
../solarpilot/Toolbox.cpp:1475:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1486:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1497:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1507:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1517:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1527:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j++)
                                  ^
../solarpilot/Toolbox.cpp:1547:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j+=2)  //jump through in pairs
                                  ^
../solarpilot/Toolbox.cpp:1594:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                 for(size_t j=0; j<npt; j+=3)  //jump through in pairs
                                  ^
../solarpilot/Toolbox.cpp: In function ‘double Toolbox::ZRotationTransform(Vect&)’:
../solarpilot/Toolbox.cpp:1693:9: warning: unused variable ‘Pi’ [-Wunused-variable]
  double Pi = PI;
         ^
../solarpilot/Toolbox.cpp: In function ‘double Toolbox::intersect_ellipse_rect(double*, double*)’:
../solarpilot/Toolbox.cpp:1779:3: warning: unused variable ‘a’ [-Wunused-variable]
   a = rect[0] - rect[2]/2., //Lower left corner X location
   ^
../solarpilot/Toolbox.cpp:1780:3: warning: unused variable ‘b’ [-Wunused-variable]
   b = rect[1] - rect[3]/2., //Lower left corner Y location
   ^
../solarpilot/Toolbox.cpp: In function ‘std::__cxx11::string Toolbox::getDelimiter(std::__cxx11::string&)’:
../solarpilot/Toolbox.cpp:1840:22: warning: comparison with string literal results in unspecified behaviour [-Waddress]
  if( text.c_str() == "") return ",";
                      ^
../solarpilot/SolarField.cpp: In static member function ‘static bool SolarField::PrepareFieldLayout(SolarField&, WeatherData*, bool)’:
../solarpilot/SolarField.cpp:897:85: error: no matching function for call to ‘std::exception::exception(const char [59])’
         throw exception("Prepare field layout called without a weather data object.");
                                                                                     ^
In file included from /usr/include/c++/5/new:40:0,
                 from /usr/include/c++/5/bits/stl_construct.h:59,
                 from /usr/include/c++/5/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/5/bits/stl_algo.h:62,
                 from /usr/include/c++/5/algorithm:62,
                 from ../solarpilot/SolarField.cpp:50:
/usr/include/c++/5/exception:63:5: note: candidate: std::exception::exception()
     exception() _GLIBCXX_USE_NOEXCEPT { }
     ^
/usr/include/c++/5/exception:63:5: note:   candidate expects 0 arguments, 1 provided
/usr/include/c++/5/exception:60:9: note: candidate: constexpr std::exception::exception(const std::exception&)
   class exception
         ^
/usr/include/c++/5/exception:60:9: note:   no known conversion for argument 1 from ‘const char [59]’ to ‘const std::exception&’
../solarpilot/SolarField.cpp: In static member function ‘static bool SolarField::DoLayout(SolarField*, sim_results*, WeatherData*, int, int)’:
../solarpilot/SolarField.cpp:1422:6: warning: unused variable ‘Npos’ [-Wunused-variable]
  int Npos = SF->getHeliostats()->size();
      ^
../solarpilot/SolarField.cpp: In member function ‘void SolarField::ProcessLayoutResults(sim_results*, int)’:
../solarpilot/SolarField.cpp:1762:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i=0; i<_heliostats.size(); i++)
                   ^
../solarpilot/SolarField.cpp: In member function ‘void SolarField::radialStaggerPositions(std::vector<sp_point>&)’:
../solarpilot/SolarField.cpp:2406:14: warning: unused variable ‘Hrad’ [-Wunused-variable]
       double Hrad = Hd/2.;
              ^
../solarpilot/SolarField.cpp:2479:40: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
             && !Htv->is_round.mapval() == var_heliostat::IS_ROUND::ROUND){ //Space to eliminate blocking - rectangular heliostats
                                        ^
../solarpilot/SolarField.cpp: In member function ‘void SolarField::cornfieldPositions(std::vector<sp_point>&)’:
../solarpilot/SolarField.cpp:2787:6: warning: unused variable ‘Nht’ [-Wunused-variable]
  int Nht = _helio_templates.size(); //Number in the radial direction
      ^
../solarpilot/SolarField.cpp: In member function ‘bool SolarField::SimulateTime(int, int, int, sim_params&)’:
../solarpilot/SolarField.cpp:3018:6: warning: unused variable ‘doy’ [-Wunused-variable]
  int doy = DT.GetDayOfYear(2011, month, day_of_month); 
      ^
../solarpilot/SolarField.cpp: In static member function ‘static void SolarField::SimulateHeliostatEfficiency(SolarField*, Vect&, Heliostat*, sim_params&)’:
../solarpilot/SolarField.cpp:3186:6: warning: unused variable ‘hid’ [-Wunused-variable]
  int hid = helios->getId();
      ^
../solarpilot/SolarField.cpp: In member function ‘double SolarField::calcShadowBlock(Heliostat*, Heliostat*, int, Vect&)’:
../solarpilot/SolarField.cpp:3284:10: warning: unused variable ‘zen’ [-Wunused-variable]
   double zen = acos(H_inter->k); //The zenith angle for interference
          ^
../solarpilot/SolarField.cpp:3288:5: warning: unused variable ‘HIt’ [-Wunused-variable]
    *HIt = HI->getTrackVector(), //Interfering heliostat track vector
     ^
../solarpilot/SolarField.cpp:3376:10: warning: unused variable ‘Hr’ [-Wunused-variable]
   double Hr = sqrt(pow(Hh/2.,2) + pow(Hw/2.,2));
          ^
../solarpilot/SolarField.cpp: In member function ‘void SolarField::CalcDimensionalFluxProfiles(Hvector&)’:
../solarpilot/SolarField.cpp:3929:9: warning: unused variable ‘q_rec_spec’ [-Wunused-variable]
  double q_rec_spec = q_to_rec / Arec;
         ^
<builtin>: recipe for target 'SolarField.o' failed
make[1]: *** [SolarField.o] Error 1
../solarpilot/Toolbox.cpp: In function ‘void Toolbox::rotation(double, int, sp_point&)’:
../solarpilot/Toolbox.cpp:994:34: warning: ‘MR2k’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.z = MR2i*Pcx + MR2j*Pcy + MR2k*Pcz; //dotprod(MR2, Pc);
                                  ^
../solarpilot/Toolbox.cpp:994:23: warning: ‘MR2j’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.z = MR2i*Pcx + MR2j*Pcy + MR2k*Pcz; //dotprod(MR2, Pc);
                       ^
../solarpilot/Toolbox.cpp:994:12: warning: ‘MR2i’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.z = MR2i*Pcx + MR2j*Pcy + MR2k*Pcz; //dotprod(MR2, Pc);
            ^
../solarpilot/Toolbox.cpp:993:34: warning: ‘MR1k’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.y = MR1i*Pcx + MR1j*Pcy + MR1k*Pcz; //dotprod(MR1, Pc);
                                  ^
../solarpilot/Toolbox.cpp:993:23: warning: ‘MR1j’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.y = MR1i*Pcx + MR1j*Pcy + MR1k*Pcz; //dotprod(MR1, Pc);
                       ^
../solarpilot/Toolbox.cpp:993:12: warning: ‘MR1i’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.y = MR1i*Pcx + MR1j*Pcy + MR1k*Pcz; //dotprod(MR1, Pc);
            ^
../solarpilot/Toolbox.cpp:992:34: warning: ‘MR0k’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.x = MR0i*Pcx + MR0j*Pcy + MR0k*Pcz; //dotprod(MR0, Pc);        //do the dotprod's here to avoid function call
                                  ^
../solarpilot/Toolbox.cpp:992:23: warning: ‘MR0j’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.x = MR0i*Pcx + MR0j*Pcy + MR0k*Pcz; //dotprod(MR0, Pc);        //do the dotprod's here to avoid function call
                       ^
../solarpilot/Toolbox.cpp:992:12: warning: ‘MR0i’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  P.x = MR0i*Pcx + MR0j*Pcy + MR0k*Pcz; //dotprod(MR0, Pc);        //do the dotprod's here to avoid function call
            ^
../solarpilot/definitions.cpp: In member function ‘void var_map::reset()’:
../solarpilot/definitions.cpp:75:6: note: variable tracking size limit exceeded with -fvar-tracking-assignments, retrying without
 void var_map::reset()
      ^
make[1]: Leaving directory '/home/sjanzou/Public/Projects/GitHub/NREL/ssc/build_linux'
Makefile:2: recipe for target 'all' failed
make: *** [all] Error 2
